                                                                                 local v0=string.char; 
                                                                        local v1=string.byte;local v2=string.sub;local  
                                                                    v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local 
                                                                 v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #   
                                                            v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + ( 
                                                          v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=      
                                                        string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local    
                                                      v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local   
                                                    v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=  
                                                  select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local 
                                                   v29=1;local v30;v27=v12(v11(v27,5),v7("\138\19","\115\164\61\150\74\227\222"),function(v42) if (v9 
                                                (v42,2)==(246 -167)) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";  
                                                end end else local v103=0;local v104;while true do if (v103==0) then v104=v10(v8(v42,16));if v30 then     
                                              local v131=0;local v132;while true do if (v131==1) then return v132;end if (0==v131) then v132=v13(v104,v30); 
                                              v30=nil;v131=1;end end else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45     
                                            then local v105=0;local v106;while true do if (v105==0) then v106=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1))  
                                            ;return v106-(v106%1) ;end end else local v107=0;local v108;while true do if (0==v107) then v108=2^(v44-(2 -1)) ;   
                                          return (((v43%(v108 + v108))>=v108) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true  
                                          do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33 
                                          () local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * (493 -237)) + v49 ;end if (v48==0) then v49 
                                          ,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;    
                                        local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end if (v51==1) then return (  
                                        v55 * 16777216) + (v54 * 65536) + (v53 * (659 -403)) + v52 ;end end   --[[==============================]]end local function v35( 
                                        ) local v56=0;local v57;local v58;local v59;local v60;local --[[============================================]] v61;local v62;     
                                        while true do if (2==v56) then v61=v31(v58,21,31);v62=( --[[======================================================]](v31(v58,32)==( 
                                      932 -(857 + 74))) and  -1) or 1 ;v56=3;end if (v56==3 --[[==========================================================]]) then if (v61==( 
                                      568 -(367 + 201))) then if (v60==0) then return v62 --[[==============================================================]] * 0 ;else      
                                      local v133=0;while true do if (v133==0) then v61=1; --[[================================================================]]v59=0;break;end 
                                       end end elseif (v61==(2974 -(214 + 713))) then     --[[==================================================================]]return ((v60  
                                      ==(0 + 0)) and (v62 * (1/(0 + 0)))) or (v62 * NaN)  --[[==================================================================]];end return v16   
                                    (v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (0==   --[[====================================================================]]v56) then v57 
                    =v34();v58=v34();v56=1;end if (v56==1) then v59=1;v60=(v31(v58,1,20)  --[[====================================================================]]* ((621 -(555 + 
               64))^32)) + v57 ;v56=2;end end end local function v36(v63) local v64=0;    --[[======================================================================]]local v65;    
            local v66;while true do if (v64==3) then return v14(v66);end if (v64==1) then --[[======================================================================]] v65=v11(v27, 
          v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end if (v64==2) then v66={};for v115= --[[======================================================================]]878 -(282 +   
        595) , #v65 do v66[v115]=v10(v9(v11(v65,v115,v115)));end v64=3;end if (v64==0)    --[[======================================================================]]then v65=nil; 
        if  not v63 then v63=v34();if (v63==0) then return "";end end v64=1;end end end   --[[======================================================================]]local v37=v34 
      ;local function v38(...) return {...},v20("#",...);end local function v39() local   --[[======================================================================]]v67={};local  
      v68={};local v69={};local v70={v67,v68,nil,v69};local v71=v34();local v72={};for v80= --[[==================================================================]]1 + 0 ,v71 do   
      local v81=0;local v82;local v83;while true do if (v81==0) then v82=v32();v83=nil;v81= --[[================================================================]]1;end if (v81==1) 
     then if (v82==1) then v83=v32()~=0 ;elseif (v82==2) then v83=v35();elseif (v82==3)     --[[==============================================================]]then v83=v36();   
    end v72[v80]=v83;break;end end end v70[3 -0 ]=v32();for v84=1,v34() do local v85=v32();if --[[==========================================================]] (v31(v85,1,1066 -( 
    68 + 997) )==0) then local v111=v31(v85,2,3);local v112=v31(v85,4,6);local v113={v33(),v33( --[[====================================================]]),nil,nil};if (v111==0) 
     then local v122=0;while true do if (v122==0) then v113[1273 -(226 + 1044) ]=v33();v113[4]=   --[[==============================================]]v33();break;end end       
    elseif (v111==1) then v113[3]=v34();elseif (v111==(8 -6)) then v113[3]=v34() -(2^16) ;elseif (    --[[====================================]]v111==3) then v113[120 -(32 + 
     85) ]=v34() -(2^16) ;v113[4]=v33();end if (v31(v112,1,1)==1) then v113[2]=v72[v113[2]];end if (v31(  --[[========================]]v112,2 + 0 ,2)==1) then v113[3]=v72[  
    v113[3]];end if (v31(v112,3,3)==1) then v113[4]=v72[v113[4]];end v67[v84]=v113;end end for v86=1,v34() do v68[v86-1 ]=v39();end return v70;end local function v40(v74,  
  v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v88=v77;local v89=v78;local v90=v79;local v91=v38;local v92=1;local v93= -1;     
  local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v109=0,v96 do if (v109>=v90) then v94[v109-v90 ]=v95[v109 + 1 ];else v98[v109]= 
  v95[v109 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v110=0;while true do if (v110==1) then if (v101<=47) then if (v101<=23) then  
  if (v101<=11) then if (v101<=5) then if (v101<=2) then if (v101<=0) then local v140=v100[2];local v141=v98[v140 + 2 ];local v142=v98[v140] + v141 ;v98[v140]=v142;if (  
  v141>0) then if (v142<=v98[v140 + 1 ]) then local v375=0;while true do if (v375==0) then v92=v100[3];v98[v140 + 3 ]=v142;break;end end end elseif (v142>=v98[v140 + 1 ] 
  ) then local v376=0;while true do if (v376==0) then v92=v100[3];v98[v140 + 3 ]=v142;break;end end end elseif (v101==1) then local v203=v100[1 + 1 ];local v204,v205=v91 
  (v98[v203](v21(v98,v203 + 1 ,v100[3])));v93=(v205 + v203) -1 ;local v206=957 -(892 + 65) ;for v334=v203,v93 do local v335=0;while true do if (v335==0) then v206=v206 + 
   1 ;v98[v334]=v204[v206];break;end end end else local v207=0;local v208;local v209;while true do if (v207==0) then v208=v100[3];v209=v98[v208];v207=1;end if (v207==1)  
  then for v442=v208 + (2 -1) ,v100[4] do v209=v209   .. v98[v442] ;end v98[v100[2]]=v209;break;end end end elseif (v101<=3) then v98[v100[2]]=v100[3] + v98[v100[4]] ;   
  elseif (v101==(6 -2)) then v98[v100[3 -1 ]]=v98[v100[3]][v100[4]];else v98[v100[2]][v98[v100[353 -(87 + 263) ]]]=v100[4];end elseif (v101<=8) then if (v101<=6) then    
  v98[v100[2]][v100[3]]=v98[v100[4]];elseif (v101==7) then local v214=0;local v215;local v216;while true do if (0==v214) then v215=v100[182 -(67 + 113) ];v216=v98[v215]; 
  v214=1;end if (v214==1) then for v443=v215 + 1 ,v93 do v15(v216,v98[v443]);end break;end end else v98[v100[2]]=v98[v100[3 + 0 ]]%v100[9 -5 ] ;end elseif (v101<=9) then   
  local v147=0;local v148;while true do if (v147==0) then v148=v100[2];v98[v148]=v98[v148]();break;end end elseif (v101>10) then local v218=v89[v100[3]];local v219;local   
  v220={};v219=v18({},{[v7("\122\16\240\61\86\6\93","\99\37\79\153\83\50")]=function(v338,v339) local v340=v220[v339];return v340[1][v340[2]];end,[v7(                      
  "\228\114\83\243\204\68\83\242\222\85","\150\187\45\61")]=function(v341,v342,v343) local v344=0;local v345;while true do if (v344==0) then v345=v220[v342];v345[1 + 0 ][  
  v345[2]]=v343;break;end end end});for v346=1,v100[4] do v92=v92 + 1 ;local v347=v88[v92];if (v347[1]==34) then v220[v346-1 ]={v98,v347[3]};else v220[v346-1 ]={v75,v347[3 
  ]};end v97[ #v97 + 1 ]=v220;end v98[v100[2]]=v40(v218,v219,v76);elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[11 -8 ];end elseif (v101<=17) then if (v101<=14) then 
   if (v101<=(964 -(802 + 150))) then if (v98[v100[5 -3 ]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==13) then local v223=0;local v224;while true do if 
   (v223==0) then v224=v100[2];v98[v224]=v98[v224](v21(v98,v224 + (1 -0) ,v100[3]));break;end end else local v225=v100[2];v98[v225]=v98[v225](v98[v225 + 1 ]);end elseif (  
  v101<=15) then v98[v100[2]]=v98[v100[3]]%v100[3 + 1 ] ;elseif (v101>16) then if (v98[v100[2]]~=v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end else for v349=v100[2] 
  ,v100[3] do v98[v349]=nil;end end elseif (v101<=20) then if (v101<=18) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];elseif (v101>19) then local v227=0;local v228;local   
  v229;local v230;while true do if (v227==0) then v228=v100[2];v229=v98[v228];v227=1;end if (1==v227) then v230=v98[v228 + 2 ];if (v230>0) then if (v229>v98[v228 + 1 ])    
  then v92=v100[3];else v98[v228 + 3 ]=v229;end elseif (v229<v98[v228 + 1 ]) then v92=v100[3];else v98[v228 + (1000 -(915 + 82)) ]=v229;end break;end end else local v231=0 
  ;local v232;local v233;while true do if (v231==0) then v232=v100[2];v233=v98[v232];v231=1;end if (v231==1) then for v446=v232 + 1 ,v93 do v15(v233,v98[v446]);end break;  
  end end end elseif (v101<=21) then local v152=0;local v153;while true do if (v152==0) then v153=v100[2];v98[v153](v21(v98,v153 + 1 ,v100[8 -5 ]));break;end end elseif  
  (v101>(13 + 9)) then local v234=v100[2];do return v21(v98,v234,v93);end else local v235=0;local v236;local v237;local v238;local v239;while true do if (0==v235) then   
  v236=v100[2];v237,v238=v91(v98[v236](v98[v236 + 1 ]));v235=1;end if (v235==1) then v93=(v238 + v236) -1 ;v239=0;v235=2;end if (v235==2) then for v447=v236,v93 do local 
     v448=0;while true do if (v448==0) then v239=v239 + (1 -0) ;v98[v447]=v237[v239];break;end end end break;end end end elseif (v101<=(1222 -(1069 + 118))) then if (    
    v101<=29) then if (v101<=26) then if (v101<=24) then v98[v100[2]]=v98[v100[3]] + v100[8 -4 ] ;elseif (v101>(54 -29)) then v98[v100[1 + 1 ]]();else do return;end end  
    elseif (v101<=27) then local v155=v100[2];local v156=v100[4];local v157=v155 + 2 ;local v158={v98[v155](v98[v155 + 1 ],v98[v157])};for v196=1,v156 do v98[v157 + v196 
     ]=v158[v196];end local v159=v158[1];if v159 then local v240=0;while true do if (v240==0) then v98[v157]=v159;v92=v100[3];break;end end else v92=v92 + 1 ;end elseif  
      (v101>28) then local v241=0;local v242;while true do if (v241==0) then v242=v100[2];v98[v242]=v98[v242](v21(v98,v242 + 1 ,v100[3]));break;end end else local v243 
      =0;local v244;while true do if (v243==0) then v244=v100[2];v98[v244](v21(v98,v244 + 1 ,v100[3]));break;end end end elseif (v101<=32) then if (v101<=30) then for  
      v199=v100[3 -1 ],v100[3] do v98[v199]=nil;end elseif (v101>31) then v98[v100[2]]=v76[v100[3]];else v98[v100[2]]=v40(v89[v100[3]],nil,v76);end elseif (v101<=33)   
        then local v160=v100[2];local v161=v98[v160 + 2 ];local v162=v98[v160] + v161 ;v98[v160]=v162;if (v161>0) then if (v162<=v98[v160 + 1 ]) then local v379=0;     
        while true do if (v379==0) then v92=v100[3];v98[v160 + 3 ]=v162;break;end end end elseif (v162>=v98[v160 + 1 ]) then local v380=0;while true do if (v380==0)    
        then v92=v100[3];v98[v160 + 3 ]=v162;break;end end end elseif (v101==(34 + 0)) then v98[v100[2]]=v98[v100[3]];else v98[v100[793 -(368 + 423) ]][v100[3]]=v100[  
          12 -8 ];end elseif (v101<=41) then if (v101<=(56 -(10 + 8))) then if (v101<=36) then v98[v100[2]][v98[v100[3]]]=v100[4];elseif (v101>37) then local v252=0; 
            local v253;while true do if (v252==0) then v253=v100[2];v98[v253](v98[v253 + 1 ]);break;end end else v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;end elseif ( 
              v101<=39) then v98[v100[2]]={};elseif (v101>40) then local v255=0;local v256;local v257;local v258;while true do if (v255==1) then v258=0;for v449=v256 
                ,v100[4] do local v450=0;while true do if (v450==0) then v258=v258 + 1 ;v98[v449]=v257[v258];break;end end end break;end if (v255==0) then v256=v100[ 
                  2];v257={v98[v256](v98[v256 + 1 ])};v255=1;end end else local v259=v89[v100[3]];local v260;local v261={};v260=v18({},{[v7(                        
                      "\35\76\162\125\24\118\179","\19\124\19\203")]=function(v352,v353) local v354=0;local v355;while true do if (0==v354) then v355=v261[v353];   
                                  return v355[1][v355[2]];end end end,[v7("\254\45\3\240\21\121\183\197\23\21","\217\161\114\109\149\98\16")]=function(v356,v357,   
                                      v358) local v359=0;local v360;while true do if (v359==0) then v360=v261[v357];v360[1][v360[2]]=v358;break;end end end});for   
                                      v361=1,v100[4] do local v362=0;local v363;while true do if (          v362==1) then if (v363[1]==34) then v261[v361-1 ]={v98, 
                                      v363[11 -8 ]};else v261[v361-(443 -(416 + 26)) ]={v75,v363[3]         };end v97[ #v97 + 1 ]=v261;break;end if (v362==0)     
                                      then v92=v92 + 1 ;v363=v88[v92];v362=1;end end end v98[v100[2         ]]=v40(v259,v260,v76);end elseif (v101<=(19 + 25))    
                                      then if (v101<=42) then v98[v100[2]]=v75[v100[3]];elseif (            v101>43) then if (v98[v100[2]]==v100[4]) then v92=v92 
                                       + 1 ;else v92=v100[3];end else v92=v100[3];end elseif (v101            <=45) then if  not v98[v100[2]] then v92=v92 + 1 ;  
                                      else v92=v100[4 -1 ];end elseif (v101==46) then local v265=0;           local v266;while true do if (v265==0) then v266=    
                                      v100[2];v98[v266](v21(v98,v266 + 1 ,v93));break;end end else            do return v98[v100[2]]();end end elseif (v101<=71 
                                        ) then if (v101<=59) then if (v101<=(491 -(145 + 293)))               then if (v101<=(480 -(44 + 386))) then if (v101<= 
                                        48) then v98[v100[1488 -(998 + 488) ]][v98[v100[3]]]=v98[               v100[2 + 2 ]];elseif (v101==49) then local v267 
                                        =0;local v268;while true do if (v267==0) then v268=v100[2];             v98[v268]=v98[v268](v21(v98,v268 + 1 ,v93));  
                                        break;end end else v98[v100[2]]=v98[v100[3]] + v100[4] ;                end elseif (v101<=51) then v98[v100[2]]=v98[  
                                        v100[3 + 0 ]]%v98[v100[4]] ;elseif (v101>52) then do                      return v98[v100[2]]();end else local v270 
                                        =v100[2];local v271=v100[4];local v272=v270 + 2 ;local                    v273={v98[v270](v98[v270 + 1 ],v98[v272]) 
                                          };for v364=1,v271 do v98[v272 + v364 ]=v273[v364];end                     local v274=v273[1];if v274 then local 
                                           v382=0;while true do if (0==v382) then v98[v272]=                          v274;v92=v100[3];break;end end  
                                            else v92=v92 + 1 ;end end elseif (v101<=56) then if                          (v101<=(826 -(201 + 571) 
                                            )) then v92=v100[3];elseif (v101>55) then v98[                                    v100[2]]=   
                                              v100[3];else local v277=0;local v278;while    
                                                true do if (0==v277) then v278=v100[2];   
                                                    v98[v278](v98[v278 + 1 ]);break;end 
                                                           end end elseif (v101<= 


--------------------------------------------------------------------------------
(1195 -(116 + 1022))) then do return;end elseif (v101>58) then local v279=0;local v280;while true do if (v279==0) then v280=v100[2];do return v98[v280](v21(v98,v280 + 1 ,v100[3]));end break;end end else local v281=0;local v282;while true do if (v281==0) then v282=v100[2];v98[v282]=v98[v282]();break;end end end elseif (v101<=65) then if (v101<=(257 -195)) then if (v101<=60) then v98[v100[2]]={};elseif (v101>61) then local v283=0;local v284;local v285;while true do if (v283==1) then v98[v284 + 1 + 0 ]=v285;v98[v284]=v285[v100[4]];break;end if (v283==0) then v284=v100[2];v285=v98[v100[3]];v283=1;end end else local v286=0;local v287;local v288;while true do if (v286==0) then v287=v100[2];v288=v98[v100[3]];v286=1;end if (v286==1) then v98[v287 + 1 ]=v288;v98[v287]=v288[v100[4]];break;end end end elseif (v101<=63) then local v174=0;local v175;local v176;local v177;local v178;while true do if (v174==1) then v93=(v177 + v175) -1 ;v178=0 -0 ;v174=2;end if (v174==0) then v175=v100[2];v176,v177=v91(v98[v175](v21(v98,v175 + 1 ,v93)));v174=1;end if (v174==2) then for v383=v175,v93 do local v384=0;while true do if (0==v384) then v178=v178 + 1 ;v98[v383]=v176[v178];break;end end end break;end end elseif (v101==64) then local v289=0;local v290;while true do if (0==v289) then v290=v100[2];v98[v290](v21(v98,v290 + 1 ,v93));break;end end else local v291=0;local v292;local v293;local v294;while true do if (v291==0) then v292=v100[2];v293=v98[v292];v291=1;end if (v291==1) then v294=v98[v292 + 2 ];if (v294>0) then if (v293>v98[v292 + 1 ]) then v92=v100[3];else v98[v292 + 3 ]=v293;end elseif (v293<v98[v292 + 1 ]) then v92=v100[3];else v98[v292 + 3 ]=v293;end break;end end end elseif (v101<=68) then if (v101<=66) then local v179=v100[2];do return v98[v179](v21(v98,v179 + 1 ,v100[3]));end elseif (v101>67) then local v295=0;local v296;local v297;local v298;local v299;while true do if (v295==1) then v93=(v298 + v296) -1 ;v299=0;v295=2;end if (v295==2) then for v456=v296,v93 do local v457=0;while true do if (0==v457) then v299=v299 + (3 -2) ;v98[v456]=v297[v299];break;end end end break;end if (v295==0) then v296=v100[2];v297,v298=v91(v98[v296](v98[v296 + 1 ]));v295=1;end end elseif (v100[861 -(814 + 45) ]==v98[v100[9 -5 ]]) then v92=v92 + 1 + 0 ;else v92=v100[3];end elseif (v101<=69) then v98[v100[2]]=v98[v100[3]];elseif (v101>70) then v98[v100[1 + 1 ]]=v98[v100[3]][v100[4]];else local v302=0;local v303;while true do if (v302==0) then v303=v100[2];do return v21(v98,v303,v93);end break;end end end elseif (v101<=83) then if (v101<=77) then if (v101<=74) then if (v101<=(957 -(261 + 624))) then v98[v100[2]]=v40(v89[v100[3]],nil,v76);elseif (v101==73) then local v304=0;local v305;local v306;local v307;while true do if (v304==1) then v307=0;for v458=v305,v100[4] do local v459=0;while true do if (v459==0) then v307=v307 + 1 ;v98[v458]=v306[v307];break;end end end break;end if (v304==0) then v305=v100[2];v306={v98[v305](v21(v98,v305 + 1 ,v93))};v304=1;end end else local v308=0;local v309;local v310;local v311;while true do if (1==v308) then v311=0;for v460=v309,v100[4] do local v461=0;while true do if (0==v461) then v311=v311 + 1 ;v98[v460]=v310[v311];break;end end end break;end if (0==v308) then v309=v100[2];v310={v98[v309](v98[v309 + 1 ])};v308=1;end end end elseif (v101<=75) then if (v98[v100[1082 -(1020 + 60) ]]~=v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>76) then v98[v100[2]]=v100[3];elseif  not v98[v100[1425 -(630 + 793) ]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=80) then if (v101<=78) then local v183=v100[2];local v184={v98[v183](v21(v98,v183 + 1 ,v93))};local v185=0;for v201=v183,v100[4] do local v202=0;while true do if (v202==0) then v185=v185 + 1 ;v98[v201]=v184[v185];break;end end end elseif (v101>79) then v98[v100[2]]();else local v315=v100[2];local v316,v317=v91(v98[v315](v21(v98,v315 + 1 ,v100[3])));v93=(v317 + v315) -1 ;local v318=0;for v368=v315,v93 do local v369=0;while true do if (v369==0) then v318=v318 + 1 ;v98[v368]=v316[v318];break;end end end end elseif (v101<=81) then v98[v100[2]][v100[3]]=v100[4];elseif (v101==82) then if v98[v100[2]] then v92=v92 + (4 -3) ;else v92=v100[3];end else v98[v100[2]]=v100[3]~=0 ;end elseif (v101<=89) then if (v101<=86) then if (v101<=84) then local v188=0;local v189;while true do if (v188==0) then v189=v100[2];v98[v189]=v98[v189](v98[v189 + 1 ]);break;end end elseif (v101>85) then v98[v100[2]]=v75[v100[3]];else v98[v100[1 + 1 ]]=v100[9 -6 ]~=0 ;end elseif (v101<=87) then local v190=v100[2];v98[v190]=v98[v190](v21(v98,v190 + 1 ,v93));elseif (v101==(1835 -(760 + 987))) then v98[v100[2]]= #v98[v100[3]];else local v324=0;local v325;local v326;local v327;local v328;while true do if (v324==1) then v93=(v327 + v325) -1 ;v328=0;v324=2;end if (2==v324) then for v464=v325,v93 do local v465=0;while true do if (v465==0) then v328=v328 + 1 ;v98[v464]=v326[v328];break;end end end break;end if (v324==0) then v325=v100[2];v326,v327=v91(v98[v325](v21(v98,v325 + 1 ,v93)));v324=1;end end end elseif (v101<=(2005 -(1789 + 124))) then if (v101<=90) then v98[v100[2]]= #v98[v100[3]];elseif (v101>91) then v98[v100[2]]=v76[v100[3]];else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101<=93) then local v193=0;local v194;local v195;while true do if (v193==0) then v194=v100[3];v195=v98[v194];v193=1;end if (v193==1) then for v390=v194 + 1 ,v100[4] do v195=v195   .. v98[v390] ;end v98[v100[768 -(745 + 21) ]]=v195;break;end end elseif (v101==94) then v98[v100[2]][v100[3]]=v98[v100[4]];elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end v92=v92 + 1 + 0 ;break;end if (v110==0) then v100=v88[v92];v101=v100[1];v110=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);