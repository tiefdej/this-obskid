local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\122\104","\149\84\70\96\160"),function(v42) if (v9(v42,2)==79) then local v94=0;while true do if (v94==0) then v30=v8(v11(v42,1,1));return "";end end else local v95=0;local v96;while true do if (0==v95) then v96=v10(v8(v42,16));if v30 then local v121=0;local v122;while true do if (v121==1) then return v122;end if (v121==0) then v122=v13(v96,v30);v30=nil;v121=1;end end else return v96;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v97=0;local v98;while true do if (v97==0) then v98=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v98-(v98%1) ;end end else local v99=0;local v100;while true do if (v99==0) then v100=2^(v44-1) ;return (((v43%(v100 + v100))>=v100) and (2 -1)) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * (187552 -122016)) + (v53 * 256) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,1,20) * (2^(61 -29))) + v57 ;v56=2;end if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else local v123=0;while true do if (v123==0) then v61=1;v59=0 -0 ;break;end end end elseif (v61==(2666 -(555 + 64))) then return ((v60==0) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (v56==0) then v57=v34();v58=v34();v56=1;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==2) then v66={};for v104=1, #v65 do v66[v104]=v10(v9(v11(v65,v104,v104)));end v64=3;end if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end if (0==v64) then v65=nil;if  not v63 then v63=v34();if (v63==0) then return "";end end v64=1;end if (v64==3) then return v14(v66);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==2) then for v106=1,v34() do local v107=0;local v108;while true do if (v107==0) then v108=v32();if (v31(v108,1,1)==0) then local v125=0;local v126;local v127;local v128;while true do if (v125==3) then if (v31(v127,3,3)==1) then v128[4]=v73[v128[4]];end v68[v106]=v128;break;end if (v125==2) then if (v31(v127,1,1)==(1 + 0)) then v128[2]=v73[v128[2]];end if (v31(v127,2,1 + 1 )==1) then v128[880 -(282 + 595) ]=v73[v128[3]];end v125=3;end if (v125==1) then v128={v33(),v33(),nil,nil};if (v126==0) then local v136=0;while true do if (v136==0) then v128[3]=v33();v128[4]=v33();break;end end elseif (v126==1) then v128[3]=v34();elseif (v126==2) then v128[3]=v34() -(2^16) ;elseif (v126==(571 -(367 + 201))) then v128[3]=v34() -((929 -(214 + 713))^16) ;v128[4]=v33();end v125=2;end if (v125==0) then v126=v31(v108,2,3);v127=v31(v108,4,6);v125=1;end end end break;end end end for v109=1638 -(1523 + 114) ,v34() do v69[v109-1 ]=v39();end return v71;end if (v67==1) then v72=v34();v73={};for v111=1,v72 do local v112=0;local v113;local v114;while true do if (v112==0) then v113=v32();v114=nil;v112=1;end if (v112==1) then if (v113==1) then v114=v32()~=0 ;elseif (v113==2) then v114=v35();elseif (v113==3) then v114=v36();end v73[v111]=v114;break;end end end v71[3]=v32();v67=2;end if (v67==0) then v68={};v69={};v70={};v71={v68,v69,nil,v70};v67=1;end end end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v80=v77;local v81=v78;local v82=v79;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v101=0,v88 do if (v101>=v82) then v86[v101-v82 ]=v87[v101 + (1 -0) ];else v90[v101]=v87[v101 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v102=0;while true do if (v102==1) then if (v93<=59) then if (v93<=29) then if (v93<=14) then if (v93<=6) then if (v93<=2) then if (v93<=0) then local v140=v92[2];local v141={v90[v140](v21(v90,v140 + 1 ,v85))};local v142=0;for v156=v140,v92[4] do local v157=0;while true do if (v157==0) then v142=v142 + 1 ;v90[v156]=v141[v142];break;end end end elseif (v93>1) then do return v90[v92[2]]();end else for v353=v92[2],v92[3] do v90[v353]=nil;end end elseif (v93<=4) then if (v93==3) then local v158=v92[2];do return v90[v158](v21(v90,v158 + 1 ,v92[3]));end else local v159=v92[2];v90[v159]=v90[v159](v21(v90,v159 + 1 ,v85));end elseif (v93>5) then v90[v92[2]]= not v90[v92[3]];else v90[v92[2]]=v90[v92[3]];end elseif (v93<=10) then if (v93<=8) then if (v93>7) then v90[v92[2]]={};else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93>9) then v90[v92[2]]();else for v355=v92[1067 -(68 + 997) ],v92[3] do v90[v355]=nil;end end elseif (v93<=(1282 -(226 + 1044))) then if (v93==11) then v90[v92[2]]=v90[v92[3]] * v90[v92[17 -13 ]] ;else local v168=v81[v92[3]];local v169;local v170={};v169=v18({},{[v7("\7\57\4\227\60\3\21","\141\88\102\109")]=function(v357,v358) local v359=0;local v360;while true do if (v359==0) then v360=v170[v358];return v360[1][v360[2]];end end end,[v7("\140\108\196\117\13\52\91\197\182\75","\161\211\51\170\16\122\93\53")]=function(v361,v362,v363) local v364=0;local v365;while true do if (v364==0) then v365=v170[v362];v365[118 -(32 + 85) ][v365[2 + 0 ]]=v363;break;end end end});for v366=1,v92[4] do local v367=0;local v368;while true do if (v367==1) then if (v368[1]==116) then v170[v366-1 ]={v90,v368[3]};else v170[v366-1 ]={v75,v368[3]};end v89[ #v89 + 1 ]=v170;break;end if (v367==0) then v84=v84 + 1 + 0 ;v368=v80[v84];v367=1;end end end v90[v92[2]]=v40(v168,v169,v76);end elseif (v93>13) then local v172=v92[2];local v173=v92[4];local v174=v172 + 2 ;local v175={v90[v172](v90[v172 + 1 ],v90[v174])};for v369=1,v173 do v90[v174 + v369 ]=v175[v369];end local v176=v175[1];if v176 then local v397=0;while true do if (v397==0) then v90[v174]=v176;v84=v92[3];break;end end else v84=v84 + 1 ;end else v90[v92[2]]=v90[v92[3]]%v92[4] ;end elseif (v93<=21) then if (v93<=17) then if (v93<=15) then if (v92[2]<v90[v92[4]]) then v84=v84 + (351 -(87 + 263)) ;else v84=v92[3];end elseif (v93==16) then if (v92[2]==v90[v92[4]]) then v84=v84 + (181 -(67 + 113)) ;else v84=v92[3];end else local v179=v92[2];local v180,v181=v83(v90[v179](v21(v90,v179 + 1 ,v85)));v85=(v181 + v179) -1 ;local v182=0;for v372=v179,v85 do v182=v182 + 1 ;v90[v372]=v180[v182];end end elseif (v93<=19) then if (v93==18) then if (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 + 0 ;else v84=v92[7 -4 ];end elseif (v90[v92[2]]<v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>20) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3 + 0 ];end elseif (v92[2]==v90[v92[15 -11 ]]) then v84=v84 + (953 -(802 + 150)) ;else v84=v92[7 -4 ];end elseif (v93<=25) then if (v93<=23) then if (v93==22) then v90[v92[2]]= #v90[v92[5 -2 ]];else local v184=v92[2];local v185,v186=v83(v90[v184](v90[v184 + 1 + 0 ]));v85=(v186 + v184) -1 ;local v187=0;for v375=v184,v85 do local v376=0;while true do if (v376==0) then v187=v187 + 1 ;v90[v375]=v185[v187];break;end end end end elseif (v93==24) then local v188=0;local v189;while true do if (v188==0) then v189=v92[2];do return v21(v90,v189,v189 + v92[3] );end break;end end else local v190=v92[2];local v191={};for v377=1, #v89 do local v378=0;local v379;while true do if (v378==0) then v379=v89[v377];for v500=0, #v379 do local v501=0;local v502;local v503;local v504;while true do if (v501==0) then v502=v379[v500];v503=v502[1];v501=1;end if (v501==1) then v504=v502[2];if ((v503==v90) and (v504>=v190)) then local v543=0;while true do if (v543==0) then v191[v504]=v503[v504];v502[1]=v191;break;end end end break;end end end break;end end end end elseif (v93<=27) then if (v93==26) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v192=0;local v193;while true do if (v192==0) then v193=v92[2];do return v21(v90,v193,v85);end break;end end end elseif (v93==(1025 -(915 + 82))) then v90[v92[2]]=v92[3];elseif (v90[v92[2]]<v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=44) then if (v93<=36) then if (v93<=(90 -58)) then if (v93<=30) then v84=v92[3];elseif (v93>31) then v90[v92[2]]=v90[v92[2 + 1 ]][v90[v92[4]]];else v90[v92[2]][v90[v92[3 -0 ]]]=v90[v92[4]];end elseif (v93<=34) then if (v93==33) then local v200=0;local v201;local v202;local v203;while true do if (0==v200) then v201=v92[2];v202={v90[v201](v21(v90,v201 + 1 ,v85))};v200=1;end if (1==v200) then v203=1187 -(1069 + 118) ;for v467=v201,v92[4] do v203=v203 + 1 ;v90[v467]=v202[v203];end break;end end else local v204=0;local v205;while true do if (v204==0) then v205=v92[4 -2 ];v90[v205](v21(v90,v205 + 1 ,v85));break;end end end elseif (v93==35) then v90[v92[2]]=v92[6 -3 ];else v76[v92[3]]=v90[v92[2]];end elseif (v93<=40) then if (v93<=38) then if (v93==37) then v90[v92[2]]=v90[v92[1 + 2 ]]/v92[4] ;else v90[v92[2]]=v92[3]~=(0 -0) ;end elseif (v93>39) then v90[v92[2]]=v76[v92[3]];else v90[v92[2]]();end elseif (v93<=42) then if (v93==(41 + 0)) then v90[v92[2]]=v90[v92[3]]%v90[v92[795 -(368 + 423) ]] ;else local v215=0;local v216;local v217;local v218;while true do if (1==v215) then v218=v90[v216 + 2 ];if (v218>0) then if (v217>v90[v216 + 1 ]) then v84=v92[9 -6 ];else v90[v216 + 3 ]=v217;end elseif (v217<v90[v216 + 1 ]) then v84=v92[3];else v90[v216 + 3 ]=v217;end break;end if (v215==0) then v216=v92[2];v217=v90[v216];v215=1;end end end elseif (v93>43) then local v219=0;local v220;while true do if (v219==0) then v220=v92[2];v90[v220](v21(v90,v220 + 1 ,v92[3]));break;end end else do return;end end elseif (v93<=51) then if (v93<=47) then if (v93<=45) then local v144=0;local v145;local v146;local v147;while true do if (v144==0) then v145=v92[2];v146=v90[v145 + 2 ];v144=1;end if (1==v144) then v147=v90[v145] + v146 ;v90[v145]=v147;v144=2;end if (v144==2) then if (v146>0) then if (v147<=v90[v145 + 1 ]) then v84=v92[3];v90[v145 + 3 ]=v147;end elseif (v147>=v90[v145 + (19 -(10 + 8)) ]) then local v507=0;while true do if (v507==0) then v84=v92[3];v90[v145 + 3 ]=v147;break;end end end break;end end elseif (v93>46) then v90[v92[7 -5 ]]=v90[v92[3]]%v92[4] ;else v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;end elseif (v93<=(491 -(416 + 26))) then if (v93>48) then local v223=0;local v224;while true do if (v223==0) then v224=v92[2];v90[v224](v90[v224 + 1 ]);break;end end else local v225=v92[2];local v226,v227=v83(v90[v225](v21(v90,v225 + 1 ,v85)));v85=(v227 + v225) -1 ;local v228=0;for v383=v225,v85 do local v384=0;while true do if (v384==0) then v228=v228 + 1 ;v90[v383]=v226[v228];break;end end end end elseif (v93==50) then do return;end else v90[v92[2]]= #v90[v92[3]];end elseif (v93<=55) then if (v93<=53) then if (v93==52) then local v230=0;local v231;while true do if (v230==0) then v231=v92[2];v90[v231]=v90[v231]();break;end end else local v232=0;local v233;local v234;while true do if (v232==0) then v233=v92[6 -4 ];v234=v90[v233];v232=1;end if (1==v232) then for v472=v233 + 1 ,v85 do v15(v234,v90[v472]);end break;end end end elseif (v93==54) then v90[v92[1 + 1 ]]= -v90[v92[3]];elseif (v90[v92[3 -1 ]]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=57) then if (v93>56) then if (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v90[v92[2]]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==58) then local v236=0;local v237;while true do if (v236==0) then v237=v92[2];v90[v237]=v90[v237]();break;end end else local v238=0;local v239;local v240;local v241;while true do if (1==v238) then v241=v90[v239 + 2 ];if (v241>0) then if (v240>v90[v239 + (439 -(145 + 293)) ]) then v84=v92[3];else v90[v239 + 3 ]=v240;end elseif (v240<v90[v239 + 1 ]) then v84=v92[3];else v90[v239 + 3 ]=v240;end break;end if (v238==0) then v239=v92[2];v240=v90[v239];v238=1;end end end elseif (v93<=(519 -(44 + 386))) then if (v93<=74) then if (v93<=66) then if (v93<=62) then if (v93<=60) then local v148=0;local v149;while true do if (0==v148) then v149=v92[1488 -(998 + 488) ];v90[v149]=v90[v149](v90[v149 + 1 ]);break;end end elseif (v93>61) then local v242=v92[2];local v243=v92[4];local v244=v242 + 2 ;local v245={v90[v242](v90[v242 + 1 + 0 ],v90[v244])};for v387=1,v243 do v90[v244 + v387 ]=v245[v387];end local v246=v245[1];if v246 then v90[v244]=v246;v84=v92[3 + 0 ];else v84=v84 + 1 ;end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=64) then if (v93==63) then v90[v92[2]]=v76[v92[3]];else local v251=0;local v252;local v253;while true do if (1==v251) then for v473=v252 + 1 ,v85 do v15(v253,v90[v473]);end break;end if (v251==0) then v252=v92[2];v253=v90[v252];v251=1;end end end elseif (v93>65) then v90[v92[774 -(201 + 571) ]]= not v90[v92[3]];else local v255=v92[2];v90[v255]=v90[v255](v21(v90,v255 + 1 ,v92[3]));end elseif (v93<=70) then if (v93<=(1206 -(116 + 1022))) then if (v93==67) then v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;else local v258=0;local v259;while true do if (v258==0) then v259=v92[2];do return v21(v90,v259,v85);end break;end end end elseif (v93>69) then v90[v92[2]]=v90[v92[3]] * v90[v92[4]] ;else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=72) then if (v93>71) then v90[v92[2]]={};else local v264=v92[2];local v265,v266=v83(v90[v264](v90[v264 + 1 ]));v85=(v266 + v264) -1 ;local v267=0 -0 ;for v390=v264,v85 do v267=v267 + 1 ;v90[v390]=v265[v267];end end elseif (v93>73) then local v268=0;local v269;while true do if (v268==0) then v269=v92[2];v90[v269](v21(v90,v269 + 1 ,v85));break;end end else v90[v92[2 + 0 ]]=v90[v92[3]] + v90[v92[4]] ;end elseif (v93<=81) then if (v93<=77) then if (v93<=75) then local v150=v92[2];local v151=v90[v92[3]];v90[v150 + (3 -2) ]=v151;v90[v150]=v151[v92[4]];elseif (v93==76) then v90[v92[7 -5 ]]=v90[v92[3]]/v92[4] ;else v90[v92[2]]=v92[3]~=0 ;end elseif (v93<=79) then if (v93>78) then local v273=0;local v274;local v275;local v276;while true do if (0==v273) then v274=v92[2];v275=v90[v274 + 2 ];v273=1;end if (v273==1) then v276=v90[v274] + v275 ;v90[v274]=v276;v273=2;end if (v273==2) then if (v275>(859 -(814 + 45))) then if (v276<=v90[v274 + 1 ]) then local v518=0;while true do if (0==v518) then v84=v92[3];v90[v274 + 3 ]=v276;break;end end end elseif (v276>=v90[v274 + 1 ]) then v84=v92[3];v90[v274 + 3 ]=v276;end break;end end else v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93>80) then v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;else local v279=v92[2];local v280,v281=v83(v90[v279](v21(v90,v279 + 1 ,v92[3])));v85=(v281 + v279) -1 ;local v282=0;for v393=v279,v85 do local v394=0;while true do if (v394==0) then v282=v282 + 1 ;v90[v393]=v280[v282];break;end end end end elseif (v93<=85) then if (v93<=83) then if (v93==(201 -119)) then v90[v92[2]]=v75[v92[3]];else do return v90[v92[2]];end end elseif (v93>84) then v76[v92[3]]=v90[v92[2]];else local v287=0;local v288;while true do if (v287==0) then v288=v92[2];v90[v288]=v90[v288](v21(v90,v288 + 1 ,v92[3]));break;end end end elseif (v93<=87) then if (v93==86) then local v289=0;local v290;while true do if (0==v289) then v290=v92[1 + 1 ];do return v90[v290](v21(v90,v290 + 1 ,v92[3]));end break;end end else local v291=0;local v292;local v293;local v294;while true do if (v291==1) then v294=0;for v476=v292,v92[4] do v294=v294 + 1 ;v90[v476]=v293[v294];end break;end if (v291==0) then v292=v92[2];v293={v90[v292](v21(v90,v292 + 1 ,v92[2 + 1 ]))};v291=1;end end end elseif (v93>88) then v90[v92[2]]=v75[v92[3]];else local v297=0;local v298;local v299;local v300;local v301;while true do if (v297==2) then for v479=v298,v85 do local v480=0;while true do if (v480==0) then v301=v301 + 1 ;v90[v479]=v299[v301];break;end end end break;end if (v297==0) then v298=v92[2];v299,v300=v83(v90[v298](v21(v90,v298 + 1 ,v92[3])));v297=1;end if (1==v297) then v85=(v300 + v298) -(886 -(261 + 624)) ;v301=0 -0 ;v297=2;end end end elseif (v93<=104) then if (v93<=96) then if (v93<=92) then if (v93<=90) then if (v90[v92[2]]==v92[4]) then v84=v84 + (1081 -(1020 + 60)) ;else v84=v92[3];end elseif (v93>91) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else v90[v92[2]]=v92[3] + v90[v92[1427 -(630 + 793) ]] ;end elseif (v93<=94) then if (v93>93) then v90[v92[2]][v92[3]]=v90[v92[4]];else local v307=0;local v308;local v309;local v310;while true do if (v307==0) then v308=v92[6 -4 ];v309={v90[v308](v21(v90,v308 + (4 -3) ,v92[3]))};v307=1;end if (1==v307) then v310=0;for v481=v308,v92[4] do local v482=0;while true do if (v482==0) then v310=v310 + 1 + 0 ;v90[v481]=v309[v310];break;end end end break;end end end elseif (v93>95) then local v311=0;local v312;while true do if (v311==0) then v312=v92[2];v90[v312]=v90[v312](v90[v312 + 1 ]);break;end end elseif v90[v92[2]] then v84=v84 + (3 -2) ;else v84=v92[3];end elseif (v93<=100) then if (v93<=98) then if (v93==97) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[1750 -(760 + 987) ];end else v90[v92[1915 -(1789 + 124) ]]=v90[v92[3]] + v92[4] ;end elseif (v93>99) then local v314=0;local v315;while true do if (v314==0) then v315=v92[768 -(745 + 21) ];v90[v315](v90[v315 + 1 + 0 ]);break;end end else v75[v92[3]]=v90[v92[2]];end elseif (v93<=102) then if (v93==101) then local v318=0;local v319;while true do if (v318==0) then v319=v92[2];v90[v319](v21(v90,v319 + 1 ,v92[3]));break;end end else v90[v92[5 -3 ]]= -v90[v92[11 -8 ]];end elseif (v93==103) then v90[v92[2]][v90[v92[3]]]=v92[4];else v75[v92[3]]=v90[v92[2]];end elseif (v93<=112) then if (v93<=108) then if (v93<=106) then if (v93==105) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 + 0 ;else v84=v92[3 + 0 ];end else v84=v92[3];end elseif (v93>107) then v90[v92[2]]=v92[3] + v90[v92[4]] ;elseif (v92[1057 -(87 + 968) ]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=110) then if (v93>109) then v90[v92[2]]=v90[v92[13 -10 ]][v90[v92[4]]];else local v329=0;local v330;local v331;while true do if (v329==0) then v330=v92[2];v331={};v329=1;end if (v329==1) then for v483=1 + 0 , #v89 do local v484=0;local v485;while true do if (0==v484) then v485=v89[v483];for v536=0, #v485 do local v537=0;local v538;local v539;local v540;while true do if (v537==0) then v538=v485[v536];v539=v538[1];v537=1;end if (1==v537) then v540=v538[2];if ((v539==v90) and (v540>=v330)) then local v552=0;while true do if (v552==0) then v331[v540]=v539[v540];v538[1]=v331;break;end end end break;end end end break;end end end break;end end end elseif (v93>111) then v90[v92[2]][v90[v92[3]]]=v92[4];else do return v90[v92[2]];end end elseif (v93<=116) then if (v93<=114) then if (v93>113) then local v334=0;local v335;local v336;while true do if (v334==1) then v90[v335 + 1 ]=v336;v90[v335]=v336[v92[4]];break;end if (v334==0) then v335=v92[2];v336=v90[v92[3]];v334=1;end end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93>115) then v90[v92[2]]=v90[v92[3]];else v90[v92[2]]=v90[v92[6 -3 ]][v92[4]];end elseif (v93<=118) then if (v93==117) then local v343=0;local v344;local v345;local v346;while true do if (v343==1) then v346={};v345=v18({},{[v7("\196\145\187\38\255\171\170","\72\155\206\210")]=function(v486,v487) local v488=0;local v489;while true do if (0==v488) then v489=v346[v487];return v489[1][v489[2]];end end end,[v7("\121\69\90\11\36\79\116\80\11\43","\83\38\26\52\110")]=function(v490,v491,v492) local v493=0;local v494;while true do if (v493==0) then v494=v346[v491];v494[1][v494[2]]=v492;break;end end end});v343=2;end if (v343==2) then for v495=1,v92[4] do local v496=0;local v497;while true do if (v496==1) then if (v497[1414 -(447 + 966) ]==116) then v346[v495-(2 -1) ]={v90,v497[3]};else v346[v495-1 ]={v75,v497[3]};end v89[ #v89 + 1 ]=v346;break;end if (v496==0) then v84=v84 + 1 ;v497=v80[v84];v496=1;end end end v90[v92[2]]=v40(v344,v345,v76);break;end if (v343==0) then v344=v81[v92[3]];v345=nil;v343=1;end end else do return v90[v92[2]]();end end elseif (v93>119) then v90[v92[2]]=v90[v92[3]][v92[4]];else local v349=0;local v350;while true do if (v349==0) then v350=v92[2];v90[v350]=v90[v350](v21(v90,v350 + 1 ,v85));break;end end end v84=v84 + 1 ;break;end if (v102==0) then v92=v80[v84];v93=v92[1];v102=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--
