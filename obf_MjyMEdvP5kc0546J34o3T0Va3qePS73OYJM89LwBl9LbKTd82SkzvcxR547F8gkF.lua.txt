local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\252\77","\30\210\99\189\89\123\141"),function(v42) if (v9(v42,5 -3 )==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,45 -29 ));if v30 then local v123=0;local v124;while true do if (0==v123) then v124=v13(v103,v30);v30=nil;v123=1;end if (1==v123) then return v124;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%(1 -0)) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=(4 -2)^(v44-(620 -(555 + 64))) ;return (((v43%(v107 + v107))>=v107) and 1) or (931 -(857 + 74)) ;end end end end local function v32() local v46=0;local v47;while true do if (1==v46) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -1) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else v59=1;v57=568 -(367 + 201) ;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (2==v62) then v64={};for v110=1, #v63 do v64[v110]=v10(v9(v11(v63,v110,v110)));end v62=3;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (3==v62) then return v14(v64);end if (v62==0) then v63=nil;if  not v61 then local v116=0;while true do if (0==v116) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=1,v34() do local v83=0;local v84;while true do if (v83==0) then v84=v32();if (v31(v84,1,1)==(0 + 0)) then local v119=0;local v120;local v121;local v122;while true do if (v119==1) then v122={v33(),v33(),nil,nil};if (v120==0) then v122[880 -(282 + 595) ]=v33();v122[4]=v33();elseif (v120==1) then v122[3]=v34();elseif (v120==2) then v122[3]=v34() -(2^16) ;elseif (v120==3) then v122[3]=v34() -(2^16) ;v122[4]=v33();end v119=2;end if (v119==3) then if (v31(v121,3,1273 -(226 + 1044) )==1) then v122[4]=v70[v122[17 -13 ]];end v65[v82]=v122;break;end if (v119==0) then v120=v31(v84,2,3);v121=v31(v84,4,1 + 5 );v119=1;end if (v119==2) then if (v31(v121,1638 -(1523 + 114) ,1)==1) then v122[2]=v70[v122[2]];end if (v31(v121,2 + 0 ,2)==(1 -0)) then v122[1068 -(68 + 997) ]=v70[v122[3]];end v119=3;end end end break;end end end for v85=1,v34() do v66[v85-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v87=v75;local v88=v76;local v89=v77;local v90=v38;local v91=1;local v92= -(118 -(32 + 85));local v93={};local v94={...};local v95=v20("#",...) -(1 + 0) ;local v96={};local v97={};for v108=0,v95 do if (v108>=v89) then v93[v108-v89 ]=v94[v108 + 1 + 0 ];else v97[v108]=v94[v108 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v109=0;while true do if (v109==0) then v99=v87[v91];v100=v99[1];v109=1;end if (v109==1) then if (v100<=58) then if (v100<=28) then if (v100<=13) then if (v100<=6) then if (v100<=2) then if (v100<=0) then local v138=0;local v139;local v140;while true do if (v138==1) then v97[v139 + 1 ]=v140;v97[v139]=v140[v99[4]];break;end if (v138==0) then v139=v99[2];v140=v97[v99[3]];v138=1;end end elseif (v100>1) then v97[v99[2]][v97[v99[3]]]=v99[961 -(892 + 65) ];else v97[v99[2]]= not v97[v99[3]];end elseif (v100<=4) then if (v100>3) then local v162=0;local v163;while true do if (0==v162) then v163=v99[2];v97[v163]=v97[v163](v97[v163 + 1 ]);break;end end elseif (v97[v99[2]]~=v97[v99[4]]) then v91=v91 + (2 -1) ;else v91=v99[3];end elseif (v100>5) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else local v164=0;local v165;local v166;local v167;while true do if (v164==0) then v165=v99[2];v166=v97[v165];v164=1;end if (v164==1) then v167=v97[v165 + 2 ];if (v167>0) then if (v166>v97[v165 + (1 -0) ]) then v91=v99[3];else v97[v165 + 3 ]=v166;end elseif (v166<v97[v165 + 1 ]) then v91=v99[3];else v97[v165 + 3 ]=v166;end break;end end end elseif (v100<=(15 -6)) then if (v100<=7) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100==8) then local v168=v99[2];local v169,v170=v90(v97[v168](v21(v97,v168 + 1 ,v92)));v92=(v170 + v168) -1 ;local v171=0;for v354=v168,v92 do local v355=0;while true do if (v355==0) then v171=v171 + (351 -(87 + 263)) ;v97[v354]=v169[v171];break;end end end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=11) then if (v100>(190 -(67 + 113))) then v97[v99[2]]= not v97[v99[3]];else v97[v99[2 + 0 ]]=v97[v99[3]][v97[v99[4]]];end elseif (v100==12) then local v176=0;local v177;local v178;local v179;local v180;while true do if (v176==0) then v177=v99[2];v178,v179=v90(v97[v177](v97[v177 + 1 ]));v176=1;end if (v176==1) then v92=(v179 + v177) -(2 -1) ;v180=0;v176=2;end if (v176==2) then for v448=v177,v92 do v180=v180 + 1 ;v97[v448]=v178[v180];end break;end end else local v181=v99[2];local v182=v97[v99[3]];v97[v181 + 1 ]=v182;v97[v181]=v182[v99[3 + 1 ]];end elseif (v100<=20) then if (v100<=16) then if (v100<=14) then v97[v99[2]]();elseif (v100==15) then local v186=v99[2];local v187=v97[v186 + 2 ];local v188=v97[v186] + v187 ;v97[v186]=v188;if (v187>0) then if (v188<=v97[v186 + 1 ]) then local v451=0;while true do if (v451==0) then v91=v99[3];v97[v186 + 3 ]=v188;break;end end end elseif (v188>=v97[v186 + 1 ]) then local v452=0;while true do if (v452==0) then v91=v99[3];v97[v186 + 3 ]=v188;break;end end end elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[11 -8 ];end elseif (v100<=18) then if (v100==17) then v97[v99[2]]=v99[955 -(802 + 150) ]~=0 ;else v97[v99[2]][v97[v99[3]]]=v97[v99[4]];end elseif (v100==19) then local v193=0;local v194;while true do if (v193==0) then v194=v99[2];do return v97[v194](v21(v97,v194 + (2 -1) ,v99[3]));end break;end end else v73[v99[3]]=v97[v99[2]];end elseif (v100<=24) then if (v100<=22) then if (v100==21) then v97[v99[3 -1 ]]=v99[3 + 0 ] + v97[v99[4]] ;else v97[v99[2]]=v73[v99[3]];end elseif (v100>23) then if (v99[2]==v97[v99[4]]) then v91=v91 + (998 -(915 + 82)) ;else v91=v99[3];end else v91=v99[3];end elseif (v100<=26) then if (v100>(70 -45)) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];else do return v97[v99[2]]();end end elseif (v100>27) then local v203=0;local v204;while true do if (v203==0) then v204=v99[2];v97[v204](v21(v97,v204 + 1 ,v99[3]));break;end end else local v205=0;local v206;local v207;local v208;while true do if (v205==1) then v208=0;for v453=v206,v99[4] do local v454=0;while true do if (v454==0) then v208=v208 + 1 ;v97[v453]=v207[v208];break;end end end break;end if (0==v205) then v206=v99[2 + 0 ];v207={v97[v206](v21(v97,v206 + 1 ,v99[3]))};v205=1;end end end elseif (v100<=(55 -12)) then if (v100<=35) then if (v100<=31) then if (v100<=29) then local v142=0;local v143;local v144;local v145;while true do if (v142==0) then v143=v99[1189 -(1069 + 118) ];v144={v97[v143](v21(v97,v143 + 1 ,v92))};v142=1;end if (v142==1) then v145=0;for v386=v143,v99[4] do v145=v145 + 1 ;v97[v386]=v144[v145];end break;end end elseif (v100==30) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=33) then if (v100==32) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;else local v211=v99[4 -2 ];local v212=v99[4];local v213=v211 + 2 ;local v214={v97[v211](v97[v211 + 1 ],v97[v213])};for v357=1,v212 do v97[v213 + v357 ]=v214[v357];end local v215=v214[1];if v215 then local v390=0;while true do if (v390==0) then v97[v213]=v215;v91=v99[3];break;end end else v91=v91 + 1 ;end end elseif (v100==34) then local v216=0;local v217;local v218;local v219;while true do if (v216==2) then for v455=1,v99[4] do local v456=0;local v457;while true do if (v456==1) then if (v457[1]==88) then v219[v455-1 ]={v97,v457[3]};else v219[v455-1 ]={v73,v457[6 -3 ]};end v96[ #v96 + 1 ]=v219;break;end if (v456==0) then v91=v91 + 1 ;v457=v87[v91];v456=1;end end end v97[v99[2]]=v40(v217,v218,v74);break;end if (v216==0) then v217=v88[v99[3]];v218=nil;v216=1;end if (v216==1) then v219={};v218=v18({},{[v7("\210\2\24\68\247\116\238","\49\141\93\113\42\147\17\150")]=function(v458,v459) local v460=0;local v461;while true do if (v460==0) then v461=v219[v459];return v461[1][v461[2]];end end end,[v7("\208\215\1\163\58\25\225\236\10\190","\112\143\136\111\198\77")]=function(v462,v463,v464) local v465=0;local v466;while true do if (v465==0) then v466=v219[v463];v466[1][v466[2]]=v464;break;end end end});v216=2;end end else v97[v99[2]]();end elseif (v100<=39) then if (v100<=37) then if (v100>36) then v97[v99[2]]=v97[v99[1 + 2 ]] -v97[v99[4]] ;else v97[v99[2]]=v97[v99[3]] + v97[v99[4]] ;end elseif (v100==38) then local v222=0;local v223;while true do if (v222==0) then v223=v99[2];do return v97[v223](v21(v97,v223 + 1 ,v99[3]));end break;end end else local v224=0;local v225;while true do if (v224==0) then v225=v99[2];v97[v225]=v97[v225]();break;end end end elseif (v100<=41) then if (v100>40) then local v226=0;local v227;while true do if (v226==0) then v227=v99[2];v97[v227]=v97[v227](v21(v97,v227 + 1 ,v99[4 -1 ]));break;end end else v97[v99[2]]=v97[v99[3]] + v97[v99[4]] ;end elseif (v100==42) then v97[v99[2]]= -v97[v99[3]];else local v230=0;local v231;while true do if (v230==0) then v231=v99[2];do return v21(v97,v231,v92);end break;end end end elseif (v100<=(50 + 0)) then if (v100<=46) then if (v100<=44) then v74[v99[3]]=v97[v99[2]];elseif (v100>45) then v97[v99[793 -(368 + 423) ]][v99[3]]=v99[4];else local v234=0;local v235;while true do if (0==v234) then v235=v99[6 -4 ];v97[v235]=v97[v235](v97[v235 + 1 ]);break;end end end elseif (v100<=48) then if (v100>47) then v97[v99[2]]=v73[v99[21 -(10 + 8) ]];else v97[v99[2]]=v97[v99[11 -8 ]][v99[4]];end elseif (v100>49) then local v240=v99[2];v97[v240]=v97[v240](v21(v97,v240 + 1 ,v92));else local v242=0;local v243;while true do if (v242==0) then v243=v99[2];v97[v243](v21(v97,v243 + 1 ,v92));break;end end end elseif (v100<=(496 -(416 + 26))) then if (v100<=52) then if (v100==51) then v97[v99[6 -4 ]][v99[3]]=v97[v99[4]];elseif (v97[v99[1 + 1 ]]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==53) then v97[v99[2]]=v99[4 -1 ];else v97[v99[440 -(145 + 293) ]]={};end elseif (v100<=56) then if (v100>55) then local v249=0;local v250;local v251;while true do if (v249==1) then for v467=v250 + 1 ,v92 do v15(v251,v97[v467]);end break;end if (v249==0) then v250=v99[2];v251=v97[v250];v249=1;end end else local v252=0;local v253;local v254;local v255;local v256;while true do if (0==v252) then v253=v99[2];v254,v255=v90(v97[v253](v21(v97,v253 + 1 ,v99[3])));v252=1;end if (v252==1) then v92=(v255 + v253) -1 ;v256=0;v252=2;end if (2==v252) then for v468=v253,v92 do local v469=0;while true do if (v469==0) then v256=v256 + 1 ;v97[v468]=v254[v256];break;end end end break;end end end elseif (v100>57) then if (v99[2]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[433 -(44 + 386) ];end else for v360=v99[2],v99[3] do v97[v360]=nil;end end elseif (v100<=87) then if (v100<=72) then if (v100<=65) then if (v100<=61) then if (v100<=59) then v97[v99[2]]=v74[v99[1489 -(998 + 488) ]];elseif (v100>60) then v97[v99[2]][v99[3]]=v99[4];else v97[v99[1 + 1 ]]=v99[3];end elseif (v100<=63) then if (v100>62) then local v261=0;local v262;local v263;local v264;while true do if (v261==1) then v264=0;for v470=v262,v99[4] do local v471=0;while true do if (v471==0) then v264=v264 + 1 ;v97[v470]=v263[v264];break;end end end break;end if (0==v261) then v262=v99[2 + 0 ];v263={v97[v262](v21(v97,v262 + 1 ,v99[775 -(201 + 571) ]))};v261=1;end end else v97[v99[2]]=v97[v99[1141 -(116 + 1022) ]] * v97[v99[4]] ;end elseif (v100>64) then local v266=v88[v99[3]];local v267;local v268={};v267=v18({},{[v7("\184\150\11\233\131\172\26","\135\231\201\98")]=function(v362,v363) local v364=0;local v365;while true do if (v364==0) then v365=v268[v363];return v365[1][v365[2]];end end end,[v7("\105\130\234\18\218\174\88\185\225\15","\199\54\221\132\119\173")]=function(v366,v367,v368) local v369=v268[v367];v369[1][v369[2]]=v368;end});for v371=1,v99[4] do local v372=0;local v373;while true do if (v372==0) then v91=v91 + 1 ;v373=v87[v91];v372=1;end if (v372==1) then if (v373[1]==88) then v268[v371-1 ]={v97,v373[3]};else v268[v371-1 ]={v73,v373[3]};end v96[ #v96 + 1 ]=v268;break;end end end v97[v99[2]]=v40(v266,v267,v74);else v97[v99[2]]=v97[v99[12 -9 ]];end elseif (v100<=(40 + 28)) then if (v100<=66) then local v150=0;local v151;local v152;while true do if (0==v150) then v151=v99[2];v152=v97[v151];v150=1;end if (v150==1) then for v393=v151 + (3 -2) ,v92 do v15(v152,v97[v393]);end break;end end elseif (v100==67) then do return;end else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=70) then if (v100>69) then v97[v99[2]]= #v97[v99[3]];else local v274=0;local v275;local v276;while true do if (v274==0) then v275=v99[2];v276={};v274=1;end if (1==v274) then for v475=1, #v96 do local v476=0;local v477;while true do if (v476==0) then v477=v96[v475];for v536=0, #v477 do local v537=v477[v536];local v538=v537[1];local v539=v537[2];if ((v538==v97) and (v539>=v275)) then local v545=0;while true do if (v545==0) then v276[v539]=v538[v539];v537[1]=v276;break;end end end end break;end end end break;end end end elseif (v100==71) then if (v97[v99[2]]<v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v97[v99[3]]/v99[4] ;end elseif (v100<=79) then if (v100<=75) then if (v100<=73) then local v153=0;local v154;local v155;while true do if (v153==1) then for v395=1, #v96 do local v396=0;local v397;while true do if (0==v396) then v397=v96[v395];for v495=0, #v397 do local v496=0;local v497;local v498;local v499;while true do if (v496==1) then v499=v497[2];if ((v498==v97) and (v499>=v154)) then v155[v499]=v498[v499];v497[1]=v155;end break;end if (v496==0) then v497=v397[v495];v498=v497[1];v496=1;end end end break;end end end break;end if (v153==0) then v154=v99[2];v155={};v153=1;end end elseif (v100>(262 -188)) then v97[v99[2]]=v97[v99[3]][v99[4]];else local v280=0;local v281;local v282;local v283;while true do if (v280==0) then v281=v99[2];v282={v97[v281](v21(v97,v281 + 1 ,v92))};v280=1;end if (v280==1) then v283=0;for v478=v281,v99[4] do local v479=0;while true do if (v479==0) then v283=v283 + 1 ;v97[v478]=v282[v283];break;end end end break;end end end elseif (v100<=77) then if (v100==76) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else v97[v99[2]]=v97[v99[3]][v97[v99[4]]];end elseif (v100==78) then local v287=0;local v288;while true do if (v287==0) then v288=v99[2];v97[v288](v21(v97,v288 + 1 ,v92));break;end end else local v289=v99[2];local v290=v99[863 -(814 + 45) ];local v291=v289 + (4 -2) ;local v292={v97[v289](v97[v289 + 1 ],v97[v291])};for v377=1,v290 do v97[v291 + v377 ]=v292[v377];end local v293=v292[1];if v293 then local v398=0;while true do if (v398==0) then v97[v291]=v293;v91=v99[3];break;end end else v91=v91 + 1 ;end end elseif (v100<=83) then if (v100<=81) then if (v100==80) then local v294=v99[2];v97[v294]=v97[v294](v21(v97,v294 + 1 ,v99[3]));else v74[v99[3]]=v97[v99[2]];end elseif (v100==82) then v97[v99[2]]= #v97[v99[3]];else v97[v99[2]]={};end elseif (v100<=(5 + 80)) then if (v100>(30 + 54)) then local v300=0;local v301;while true do if (v300==0) then v301=v99[2];v97[v301](v97[v301 + 1 ]);break;end end else v97[v99[2]]= -v97[v99[3]];end elseif (v100==86) then for v380=v99[2],v99[3] do v97[v380]=nil;end else do return;end end elseif (v100<=102) then if (v100<=94) then if (v100<=(975 -(261 + 624))) then if (v100<=88) then v97[v99[2]]=v97[v99[3]];elseif (v100==89) then v97[v99[3 -1 ]]=v97[v99[3]] + v99[4] ;else local v304=0;local v305;while true do if (v304==0) then v305=v99[2];v97[v305](v97[v305 + 1 ]);break;end end end elseif (v100<=92) then if (v100==91) then if (v97[v99[2]]<v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]][v99[3]]=v97[v99[4]];end elseif (v100==93) then v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;else v91=v99[3];end elseif (v100<=98) then if (v100<=96) then if (v100==95) then do return v97[v99[2]]();end else local v310=0;local v311;local v312;local v313;while true do if (1==v310) then v313=v97[v311 + 2 ];if (v313>0) then if (v312>v97[v311 + 1 ]) then v91=v99[1083 -(1020 + 60) ];else v97[v311 + 3 ]=v312;end elseif (v312<v97[v311 + 1 ]) then v91=v99[3];else v97[v311 + 3 ]=v312;end break;end if (v310==0) then v311=v99[2];v312=v97[v311];v310=1;end end end elseif (v100>97) then v73[v99[3]]=v97[v99[2]];else local v316=v99[1425 -(630 + 793) ];local v317=v97[v316 + 2 ];local v318=v97[v316] + v317 ;v97[v316]=v318;if (v317>0) then if (v318<=v97[v316 + 1 ]) then local v480=0;while true do if (v480==0) then v91=v99[3];v97[v316 + 3 ]=v318;break;end end end elseif (v318>=v97[v316 + 1 ]) then local v481=0;while true do if (v481==0) then v91=v99[3];v97[v316 + 3 ]=v318;break;end end end end elseif (v100<=100) then if (v100>99) then local v320=0;local v321;local v322;local v323;local v324;while true do if (v320==0) then v321=v99[2];v322,v323=v90(v97[v321](v21(v97,v321 + 1 ,v99[9 -6 ])));v320=1;end if (v320==1) then v92=(v323 + v321) -1 ;v324=0;v320=2;end if (v320==2) then for v482=v321,v92 do local v483=0;while true do if (0==v483) then v324=v324 + 1 ;v97[v482]=v322[v324];break;end end end break;end end elseif (v97[v99[2]]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==101) then local v325=0;local v326;while true do if (v325==0) then v326=v99[9 -7 ];v97[v326](v21(v97,v326 + 1 + 0 ,v99[3]));break;end end else v97[v99[2]]=v97[v99[3]] * v97[v99[4]] ;end elseif (v100<=109) then if (v100<=(361 -256)) then if (v100<=103) then v97[v99[2]]=v99[3]~=0 ;elseif (v100==104) then if (v99[2]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else local v328=0;local v329;while true do if (v328==0) then v329=v99[2];do return v21(v97,v329,v92);end break;end end end elseif (v100<=107) then if (v100==106) then local v330=0;local v331;local v332;local v333;local v334;while true do if (v330==0) then v331=v99[2];v332,v333=v90(v97[v331](v21(v97,v331 + 1 ,v92)));v330=1;end if (2==v330) then for v484=v331,v92 do local v485=0;while true do if (0==v485) then v334=v334 + (1748 -(760 + 987)) ;v97[v484]=v332[v334];break;end end end break;end if (v330==1) then v92=(v333 + v331) -1 ;v334=0;v330=2;end end elseif (v97[v99[2]]~=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==108) then if  not v97[v99[1915 -(1789 + 124) ]] then v91=v91 + 1 ;else v91=v99[769 -(745 + 21) ];end else v97[v99[1 + 1 ]][v97[v99[3]]]=v99[4];end elseif (v100<=113) then if (v100<=111) then if (v100>110) then local v337=0;local v338;while true do if (v337==0) then v338=v99[2];v97[v338]=v97[v338](v21(v97,v338 + 1 ,v92));break;end end else v97[v99[2]]=v97[v99[3]]/v99[4] ;end elseif (v100>(307 -195)) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[11 -8 ];end elseif  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=115) then if (v100==114) then local v340=0;local v341;local v342;local v343;local v344;while true do if (v340==0) then v341=v99[2];v342,v343=v90(v97[v341](v97[v341 + 1 ]));v340=1;end if (v340==2) then for v486=v341,v92 do local v487=0;while true do if (0==v487) then v344=v344 + 1 ;v97[v486]=v342[v344];break;end end end break;end if (v340==1) then v92=(v343 + v341) -1 ;v344=0;v340=2;end end elseif v97[v99[1 + 1 ]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==116) then v97[v99[2]]=v74[v99[3]];else local v347=v99[2];v97[v347]=v97[v347]();end v91=v91 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return v23("LOL!",v17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--
